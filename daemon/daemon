#!/bin/sh

# This is a sample DAEMON file which is started at boottime. iIt must be names
# "start" here and will be renamed according to your Pluginname during
# installation. CAUTION! MAKE SURE YOUR SCRIPT EXITS CLEANLY! It is a good idea
# to start your daemon as background process. If you do something wrong here
# your user's systems may hang forever during boottime!

# Will be executed as user "root".

# Name this file "daemon.sh" in your plugin-archive. It will be renamed to NAME
# during installation

# wait for DNS readiness
until $(curl --output /dev/null --silent --head --fail http://nodejs.org); do
    printf '.'
    sleep 5
done

# Test if nodejs is installed otherwise install it: 
if [ `which nodejs > /dev/null; echo $?` -ne 0 ] || [ `which npm > /dev/null; echo $?` -ne 0 ]
then 
    if [ `grep Hardware /proc/cpuinfo | grep -E -c 'BCM[0-9]+'` -eq 1 ]
    then 
        # based on https://github.com/audstanley/NodeJs-Raspberry-Pi/
        PICHIP=$(uname -m);
        LINKTONODE=$(curl -sG https://nodejs.org/dist/latest-v9.x/ | awk '{print $2}' | grep -P 'href=\"node-v9\.\d{1,}\.\d{1,}-linux-'$PICHIP'\.tar\.gz' | sed 's/href="//' | sed 's/<\/a>//' | sed 's/">.*//');
        NODEFOLDER=$(echo $LINKTONODE | sed 's/.tar.gz/\//');
        #Next, Creates directory for downloads, and downloads node 8.x
        cd /tmp && mkdir tempNode && cd tempNode && wget https://nodejs.org/dist/latest-v9.x/$LINKTONODE;
        tar -xzf $LINKTONODE;
        #Remove the tar after extracing it.
        rm $LINKTONODE;
        #remove older version of node:
        rm -R -f /opt/nodejs/;
        #remove symlinks
        rm /usr/bin/node /usr/sbin/node /sbin/node /sbin/node /usr/local/bin/node /usr/bin/npm /usr/sbin/npm /sbin/npm /usr/local/bin/npm 2> /dev/null;
        #This next line will copy Node over to the appropriate folder.
        mv /tmp/tempNode/$NODEFOLDER /opt/nodejs/;
        #This line will remove the nodeJs tar we downloaded.
        rm -R -f /tmp/tempNode/$LINKTONODE/;
        #Create symlinks to node && npm
        ln -s /opt/nodejs/bin/node /usr/bin/node; ln -s /opt/nodejs/bin/node /usr/sbin/node; 
        ln -s /opt/nodejs/bin/node /sbin/node; ln -s /opt/nodejs/bin/node /usr/local/bin/node; 
        ln -s /opt/nodejs/bin/npm /usr/bin/npm; 
        ln -s /opt/nodejs/bin/npm /usr/sbin/npm; ln -s /opt/nodejs/bin/npm /sbin/npm; 
        ln -s /opt/nodejs/bin/npm /usr/local/bin/npm; 
    else 
        if [ ! -f /etc/apt/sources.list.d/nodesource.list ]
        then 
            /usr/bin/logger "Raumserver installation: nodesources repo not installed. Starting installation now."
            # Nodejs current is recommended as of
            #  https://github.com/ChriD/node-raumserver#requirements
            curl -sL https://deb.nodesource.com/setup_8.x | bash
            apt-get -y install nodejs
        fi
    fi
fi

if [ -d '/opt/loxberry/data/plugins/raumserver' ]
then 
    # change to raumserver folder
    cd /opt/loxberry/data/plugins/raumserver
    
    #check if raumserver already installed
    if [ `npm list | grep -c "node-raumserver"` -ne 1 ]
    then
        /usr/bin/logger "Raumserver installation: node module raumserver not instlled. Starting installation now."
        # otherwise install the server
        npm install github:ChriD/node-raumserver
    fi

    /usr/bin/logger "Raumserver: starting."
    #run the server: 
    cd /opt/loxberry/data/plugins/raumserver/node_modules/node-raumserver/
    node raumserver.js &

    if [ `ps ax | grep -v grep | grep -c raumserver.js` -eq 1 ]
    then
        /usr/bin/logger "Raumserver: Start successful."
    else
        /usr/bin/logger "Raumserver: Start failed."
    fi
fi

exit 0
